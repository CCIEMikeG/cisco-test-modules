---

- name: TESTING NXOS_BGP_AF
  hosts: n9k2
  connection: local
  gather_facts: no

  vars:
      nxos_provider:
        username: "{{ un }}"
        password: "{{ pwd }}"
        transport: nxapi
        host: "{{ inventory_hostname }}"

  tasks:
  - name: remove the bgp process
    nxos_bgp:
      asn: 65535
      state: absent
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data
    tags: test

  - name: prepare the device
    nxos_bgp_neighbor_af:
      asn: 65535
      neighbor: '3.3.3.3'
      remote_as: 65535
      state: present
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data

  - name: configure RR client
    nxos_bgp_neighbor_af:
      asn: 65535
      neighbor: '3.3.3.3'
      afi: ipv4
      safi: unicast
      route_reflector_client: true
      state: present
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data

  - assert:
      that:
        - data.changed == true
        - data.end_state['route_reflector_client'] == true

  - name: idempotency check
    nxos_bgp_neighbor_af:
      asn: 65535
      neighbor: '3.3.3.3'
      afi: ipv4
      safi: unicast
      route_reflector_client: true
      state: present
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data

  - assert:
      that:
        - data.changed == false

  - name: remove RR client
    nxos_bgp_neighbor_af:
      asn: 65535
      neighbor: '3.3.3.3'
      afi: ipv4
      safi: unicast
      route_reflector_client: false
      state: present
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data

  - assert:
      that:
        - data.changed == true
        - data.end_state['route_reflector_client'] == false

  - name: idempotency check
    nxos_bgp_neighbor_af:
      asn: 65535
      neighbor: '3.3.3.3'
      afi: ipv4
      safi: unicast
      route_reflector_client: false
      state: present
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data

  - assert:
      that:
        - data.changed == false

  - name: send-community extended
    nxos_bgp_neighbor_af:
      asn: 65535
      neighbor: '3.3.3.3'
      afi: ipv4
      safi: unicast
      send_community: extended
      state: present
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data

  - assert:
      that:
        - data.changed == true
        - data.end_state['send_community'] == 'extended'

  - name: idempotency check
    nxos_bgp_neighbor_af:
      asn: 65535
      neighbor: '3.3.3.3'
      afi: ipv4
      safi: unicast
      send_community: extended
      state: present
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data

  - assert:
      that:
        - data.changed == false

  - name: add send-community standard
    nxos_bgp_neighbor_af:
      asn: 65535
      neighbor: '3.3.3.3'
      afi: ipv4
      safi: unicast
      send_community: standard
      state: present
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data

  - assert:
      that:
        - data.changed == true
        - data.end_state['send_community'] == 'both'

  - name: idempotency check
    nxos_bgp_neighbor_af:
      asn: 65535
      neighbor: '3.3.3.3'
      afi: ipv4
      safi: unicast
      send_community: both
      state: present
      provider: "{{ nxos_provider }}"
      m_facts: true
    register: data

  - assert:
      that:
        - data.changed == false
